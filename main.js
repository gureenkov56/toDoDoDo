let taskList = [
  {
    text: "–ö—É–ø–∏—Ç—å —Ö–ª–µ–±",
    isDone: false,
  },
  {
    text: "–ü–æ–≥—É–ª—è—Ç—å —Å —Å–æ–±–∞–∫–æ–π",
    isDone: false,
  },
  {
    text: "–ù–∞–≤–µ—Å—Ç–∏—Ç—å –±–∞–±—É–ª—é",
    isDone: false,
  },
  {
    text: "–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É",
    isDone: true,
  },
];

let darkMode = false;

let buttonAdd = document.querySelector("#add");
let inputNew = document.querySelector("#inputNew");
let ulUndoneTask = document.querySelector("#ulTask");
let ulDoneTask = document.querySelector("#ulDoneTask");
let mode = document.querySelector("#mode");
let body = document.querySelector("body");

function renderList() {
  let undoneList = "";
  let doneList = "";
  for (idx in taskList) {
    if (!taskList[idx].isDone) {
      undoneList += `
        <li onclick='doneToggler(${idx})'>
          <input type='checkbox' id='${idx}'>
          <label for='${idx}'>
            ${taskList[idx].text}
          </label>
          <button onclick='deleteTask(event, ${idx})'>‚úñ</button>
        </li>
      `;
    } else {
      doneList += `
        <li onclick='doneToggler(${idx})'>
          <input type='checkbox' id='${idx}' checked>
          <label for='${idx}'>
            ${taskList[idx].text}
          </label>
          <button onclick='deleteTask(event, ${idx})'>‚úñ</button>
        </li>
      `;
    }
  }
  if (doneList === "") {
    doneList = "<p>–ù–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á</p>";
  }
  if (undoneList === "") {
    undoneList = "<p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á</p>";
  }
  ulUndoneTask.innerHTML = undoneList;
  ulDoneTask.innerHTML = doneList;
}

function doneToggler(idx) {
  // –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –µ–≥–æ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
  let newIdx = taskList.length + 1;
  taskList[idx].isDone = !taskList[idx].isDone;
  taskList[newIdx] = taskList[idx];
  taskList.splice(idx, 1);
  renderList();
}

function addTask() {
  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É input text
  if (!inputNew.value.length) {
    return;
  }
  let newTask = {
    text: inputNew.value,
    isDone: false,
  };
  inputNew.value = "";
  taskList.push(newTask);
  renderList();
}

function deleteTask(event, idx) {
  taskList.splice(idx, 1);
  event.stopPropagation();
  renderList();
}

function darkModeToggler() {
  if (darkMode) {
    body.classList.remove("body-dark");
    inputNew.classList.remove("input-dark");
    mode.classList.remove("mode-dark");
    mode.innerHTML = "‚òÄ";
    darkMode = !darkMode;
  } else {
    inputNew.classList.add("input-dark");
    body.classList.add("body-dark");
    mode.classList.add("mode-dark");
    mode.innerHTML = "üåô";
    darkMode = !darkMode;
  }
}

buttonAdd.onclick = addTask;

mode.onclick = darkModeToggler;

// –≤–≤–æ–¥ —á–µ—Ä–µ–∑ enter
inputNew.addEventListener("keydown", function (event) {
  if (event.code === "Enter") {
    addTask();
  }
});

renderList();
